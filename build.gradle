buildscript {
	ext {
		springBootVersion = '1.3.2.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}") 
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'spring-boot' 

jar {
	baseName = 'targetapp'
	version = '0.0.1-SNAPSHOT'
}
sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
	mavenCentral()
}


dependencies {
	compile('org.springframework.boot:spring-boot-starter-aop')
	//compile('org.springframework.boot:spring-boot-starter-data-cassandra')
	compile('org.springframework.boot:spring-boot-starter-data-jpa')
	compile('org.springframework.boot:spring-boot-starter-security')
	compile('org.springframework.boot:spring-boot-starter-validation')
	compile('org.springframework.boot:spring-boot-starter-web')
	runtime('org.hsqldb:hsqldb')
	runtime('mysql:mysql-connector-java')
	testCompile('org.springframework.boot:spring-boot-starter-test') 
	testCompile('org.hamcrest:hamcrest-all:1.3')
	testCompile('junit:junit:4.11'){
	exclude group:'org.hamcrest', module:'hamcrest-core'	
	}
	testCompile('org.mockito:mockito-core:1.9.5')
	testCompile('org.springframework:spring-test:4.2.4.RELEASE')
	testCompile('com.jayway.jsonpath:json-path:2.1.0')
	testCompile('com.jayway.jsonpath:json-path-assert:2.1.0')
	
	
	
}


eclipse {
	classpath {
		 containers.remove('org.eclipse.jdt.launching.JRE_CONTAINER')
		 containers 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.8'
	}
}

task wrapper(type: Wrapper) {
	gradleVersion = '2.9'
}
